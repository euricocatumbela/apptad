{"version":3,"sources":["webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/models/models_0.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-amplify/interactions/lib-esm/Providers/InteractionsProvider.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/endpoints.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/runtimeConfig.shared.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/runtimeConfig.browser.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/LexRuntimeServiceClient.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-amplify/interactions/lib-esm/Providers/AWSLexProvider.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/protocols/Aws_restJson1.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/commands/PostTextCommand.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/client-lex-runtime-service/dist/es/commands/PostContentCommand.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-amplify/interactions/lib-esm/Providers/AWSLexProviderHelper/convert.js","webpack:///./node_modules/@aws-amplify/ui-components/node_modules/@aws-amplify/interactions/lib-esm/Interactions.js","webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-chatbot.entry.js"],"names":["FulfillmentState","MessageFormatType","DialogActionType","ConfirmationStatus","DialogState","ContentType","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","AbstractInteractionsProvider","options","_config","configure","config","debug","getProviderName","getCategory","defineProperty","get","enumerable","configurable","AWS_REGIONS","Set","AWS_CN_REGIONS","AWS_ISO_REGIONS","AWS_ISO_B_REGIONS","AWS_US_GOV_REGIONS","ClientSharedValues","apiVersion","disableHostPrefix","logger","regionInfoProvider","region","regionInfo","undefined","hostname","partition","signingService","has","replace","Promise","resolve","signingName","ClientDefaultValues","runtime","base64Decoder","base64Encoder","bodyLengthChecker","credentialDefaultProvider","defaultUserAgent","name","version","maxAttempts","requestHandler","sha256","streamCollector","urlParser","utf8Decoder","utf8Encoder","_super","LexRuntimeServiceClient","configuration","_this","_config_0","_config_1","_config_2","_config_3","_config_4","_config_5","_config_6","middlewareStack","use","destroy","filterSensitiveLog","obj","slots","message","dialogAction","recentIntentSummaryView","map","item","sessionAttributes","requestAttributes","inputText","alternativeIntents","_extendStatics","output","context","parsedOutput","_a","response","errorCode","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","parsedBody","_p","_q","label","parseBody","body","concat","sent","loadRestJsonErrorCode","$metadata","deserializeMetadata","code","Code","Message","$fault","reject","Error","contents","data","retryAfterSeconds","headers","input","entries","reduce","acc","_b","key","value","deserializeAws_restJson1genericAttachmentList","entry","attachmentLinkUrl","buttons","deserializeAws_restJson1listOfButtons","imageUrl","subTitle","title","deserializeAws_restJson1GenericAttachment","deserializeAws_restJson1IntentConfidence","score","deserializeAws_restJson1IntentList","deserializeAws_restJson1PredictedIntent","text","deserializeAws_restJson1Button","intentName","nluIntentConfidence","deserializeAws_restJson1ResponseCard","contentType","genericAttachments","deserializeAws_restJson1SentimentResponse","sentimentLabel","sentimentScore","httpStatusCode","statusCode","httpHeaders","requestId","collectBodyString","streamBody","Uint8Array","collectBody","then","isSerializableHeaderValue","getOwnPropertyNames","includes","size","encoded","JSON","parse","object","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey","keys","find","k","toLowerCase","PostTextCommand","resolveMiddleware","clientStack","serialize","deserialize","stack","handlerExecutionContext","clientName","commandName","inputFilterSensitiveLog","outputFilterSensitiveLog","info","request","handle","resolvedPath","labelValue","protocol","port","userId","botAlias","botName","stringify","endpoint","method","path","botVersion","dialogState","messageFormat","responseCard","sentimentResponse","sessionId","slotToElicit","PostContentCommand","fromObject","accept","Accept","inputStream","audioStream","inputTranscript","convert","stream","Blob","ReadableStream","Response","arrayBuffer","buffer","__extends","d","b","setPrototypeOf","__proto__","Array","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","e","rejected","result","done","__generator","f","y","g","_","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","AWSLexProvider","_botsCompleteCallback","reportBotStatus","botname","setTimeout","onComplete","sendMessage","credentials","params","postTextCommand","err_1","content","messageType","postContentCommand","audioArray","err_2","Credentials","lexRuntimeServiceClient","customUserAgent","alias","identityId","send","callback","ErrorEvent","Interactions","InteractionsClass","_options","_pluggables","getModuleName","opt","bots","aws_bots_config","bots_config","isArray","forEach","bot","providerName","addPluggable","pluggable","botProvider","Amplify","register","ChatState","MessageFrom","ChatErrorType","__spreadArrays","il","r","a","j","jl","writeString","view","offset","string","setUint8","charCodeAt","encodeWAV","samples","exportSampleRate","audioSize","dataSize","ArrayBuffer","DataView","setUint32","fmtSize","setUint16","byteOffset","Math","max","min","setInt16","floatTo16BitPCM","exportBuffer","recBuffer","recLength","recordSampleRate","downsampledBuffer","sampleRateRatio","newLength","round","Float32Array","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","downsampleBuffer","bufferArray","set","mergeBuffers","encodedWav","type","AudioRecorder","streamBuffer","streamBufferLength","recording","init","isBrowser","window","AudioContext","webkitAudioContext","audioContext","navigator","mediaDevices","getUserMedia","audio","audioSupported","setupAudioNodes","catch","sourceNode","processorNode","analyserNode","resume","error","createMediaStreamSource","createScriptProcessor","onaudioprocess","audioProcessingEvent","inputBuffer","getChannelData","analyse","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","connect","destination","startRecording","onSilence","visualizer","start","Date","now","stopRecording","clear","play","myBlob","res","rej","fileReader","FileReader","onload","playbackSource","disconnect","createBufferSource","decodeAudioData","buf","onended","err","onerror","readAsArrayBuffer","stop","analyser","fftSize","bufferLength","dataArray","amplitude","time","getByteTimeDomainData","curr_value_time","exportWAV","blob","sampleRate","AmplifyChatbot","class_1","hostRef","clearOnComplete","conversationModeOn","botTitle","CHATBOT_TITLE","voiceEnabled","textEnabled","silenceTime","silenceThreshold","messages","chatState","Initial","messageJSX","messageList","class","from","SendingText","SendingVoice","client","Bot","User","chatCompleted","submitHandler","_event","sendTextMessage","componentWillLoad","validateProps","componentDidRender","element","shadowRoot","querySelector","scrollTop","scrollHeight","welcomeMessage","appendToChat","audioRecorder","setError","Recoverable","emit","reset","Unrecoverable","NO_BOT_NAME_ERROR","CHAT_DISABLED_ERROR","handleMicButton","Listening","handleSilence","sendVoiceMessage","handleTextChange","event","target","handleCancelButton","handleToastClose","errorType","canvas","getBoundingClientRect","width","height","canvasCtx","getContext","fillStyle","clearRect","requestAnimationFrame","fillRect","lineWidth","color","getComputedStyle","document","documentElement","getPropertyValue","strokeStyle","beginPath","sliceWidth","x","moveTo","lineTo","stroke","err_3","audioInput","interactionsMessage","err_4","listeningFooterJSX","handleButtonClick","variant","icon","footerJSX","inputPlaceholder","TEXT_INPUT_PLACEHOLDER","VOICE_INPUT_PLACEHOLDER","placeholder","I18n","description","handleInputChange","evt","disabled","errorToast","handleClose","render","style"],"mappings":"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","file":"33-1c4cc63f68046d966f2d.js","sourcesContent":["import { __assign } from \"tslib\";\nimport { SENSITIVE_STRING } from \"@aws-sdk/smithy-client\";\nexport var BadRequestException;\n\n(function (BadRequestException) {\n  BadRequestException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(BadRequestException || (BadRequestException = {}));\n\nexport var ConflictException;\n\n(function (ConflictException) {\n  ConflictException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ConflictException || (ConflictException = {}));\n\nexport var DeleteSessionRequest;\n\n(function (DeleteSessionRequest) {\n  DeleteSessionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteSessionRequest || (DeleteSessionRequest = {}));\n\nexport var DeleteSessionResponse;\n\n(function (DeleteSessionResponse) {\n  DeleteSessionResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteSessionResponse || (DeleteSessionResponse = {}));\n\nexport var InternalFailureException;\n\n(function (InternalFailureException) {\n  InternalFailureException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InternalFailureException || (InternalFailureException = {}));\n\nexport var LimitExceededException;\n\n(function (LimitExceededException) {\n  LimitExceededException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LimitExceededException || (LimitExceededException = {}));\n\nexport var NotFoundException;\n\n(function (NotFoundException) {\n  NotFoundException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NotFoundException || (NotFoundException = {}));\n\nexport var GetSessionRequest;\n\n(function (GetSessionRequest) {\n  GetSessionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetSessionRequest || (GetSessionRequest = {}));\n\nexport var FulfillmentState;\n\n(function (FulfillmentState) {\n  FulfillmentState[\"FAILED\"] = \"Failed\";\n  FulfillmentState[\"FULFILLED\"] = \"Fulfilled\";\n  FulfillmentState[\"READY_FOR_FULFILLMENT\"] = \"ReadyForFulfillment\";\n})(FulfillmentState || (FulfillmentState = {}));\n\nexport var MessageFormatType;\n\n(function (MessageFormatType) {\n  MessageFormatType[\"COMPOSITE\"] = \"Composite\";\n  MessageFormatType[\"CUSTOM_PAYLOAD\"] = \"CustomPayload\";\n  MessageFormatType[\"PLAIN_TEXT\"] = \"PlainText\";\n  MessageFormatType[\"SSML\"] = \"SSML\";\n})(MessageFormatType || (MessageFormatType = {}));\n\nexport var DialogActionType;\n\n(function (DialogActionType) {\n  DialogActionType[\"CLOSE\"] = \"Close\";\n  DialogActionType[\"CONFIRM_INTENT\"] = \"ConfirmIntent\";\n  DialogActionType[\"DELEGATE\"] = \"Delegate\";\n  DialogActionType[\"ELICIT_INTENT\"] = \"ElicitIntent\";\n  DialogActionType[\"ELICIT_SLOT\"] = \"ElicitSlot\";\n})(DialogActionType || (DialogActionType = {}));\n\nexport var DialogAction;\n\n(function (DialogAction) {\n  DialogAction.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign({}, obj), obj.slots && {\n      slots: SENSITIVE_STRING\n    }), obj.message && {\n      message: SENSITIVE_STRING\n    });\n  };\n})(DialogAction || (DialogAction = {}));\n\nexport var ConfirmationStatus;\n\n(function (ConfirmationStatus) {\n  ConfirmationStatus[\"CONFIRMED\"] = \"Confirmed\";\n  ConfirmationStatus[\"DENIED\"] = \"Denied\";\n  ConfirmationStatus[\"NONE\"] = \"None\";\n})(ConfirmationStatus || (ConfirmationStatus = {}));\n\nexport var IntentSummary;\n\n(function (IntentSummary) {\n  IntentSummary.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.slots && {\n      slots: SENSITIVE_STRING\n    });\n  };\n})(IntentSummary || (IntentSummary = {}));\n\nexport var GetSessionResponse;\n\n(function (GetSessionResponse) {\n  GetSessionResponse.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign(__assign({}, obj), obj.dialogAction && {\n      dialogAction: DialogAction.filterSensitiveLog(obj.dialogAction)\n    }), obj.recentIntentSummaryView && {\n      recentIntentSummaryView: obj.recentIntentSummaryView.map(function (item) {\n        return IntentSummary.filterSensitiveLog(item);\n      })\n    }), obj.sessionAttributes && {\n      sessionAttributes: SENSITIVE_STRING\n    });\n  };\n})(GetSessionResponse || (GetSessionResponse = {}));\n\nexport var BadGatewayException;\n\n(function (BadGatewayException) {\n  BadGatewayException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(BadGatewayException || (BadGatewayException = {}));\n\nexport var DependencyFailedException;\n\n(function (DependencyFailedException) {\n  DependencyFailedException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DependencyFailedException || (DependencyFailedException = {}));\n\nexport var LoopDetectedException;\n\n(function (LoopDetectedException) {\n  LoopDetectedException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LoopDetectedException || (LoopDetectedException = {}));\n\nexport var NotAcceptableException;\n\n(function (NotAcceptableException) {\n  NotAcceptableException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NotAcceptableException || (NotAcceptableException = {}));\n\nexport var PostContentRequest;\n\n(function (PostContentRequest) {\n  PostContentRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign({}, obj), obj.requestAttributes && {\n      requestAttributes: SENSITIVE_STRING\n    }), obj.sessionAttributes && {\n      sessionAttributes: SENSITIVE_STRING\n    });\n  };\n})(PostContentRequest || (PostContentRequest = {}));\n\nexport var DialogState;\n\n(function (DialogState) {\n  DialogState[\"CONFIRM_INTENT\"] = \"ConfirmIntent\";\n  DialogState[\"ELICIT_INTENT\"] = \"ElicitIntent\";\n  DialogState[\"ELICIT_SLOT\"] = \"ElicitSlot\";\n  DialogState[\"FAILED\"] = \"Failed\";\n  DialogState[\"FULFILLED\"] = \"Fulfilled\";\n  DialogState[\"READY_FOR_FULFILLMENT\"] = \"ReadyForFulfillment\";\n})(DialogState || (DialogState = {}));\n\nexport var PostContentResponse;\n\n(function (PostContentResponse) {\n  PostContentResponse.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.message && {\n      message: SENSITIVE_STRING\n    });\n  };\n})(PostContentResponse || (PostContentResponse = {}));\n\nexport var RequestTimeoutException;\n\n(function (RequestTimeoutException) {\n  RequestTimeoutException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RequestTimeoutException || (RequestTimeoutException = {}));\n\nexport var UnsupportedMediaTypeException;\n\n(function (UnsupportedMediaTypeException) {\n  UnsupportedMediaTypeException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(UnsupportedMediaTypeException || (UnsupportedMediaTypeException = {}));\n\nexport var PostTextRequest;\n\n(function (PostTextRequest) {\n  PostTextRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign(__assign({}, obj), obj.requestAttributes && {\n      requestAttributes: SENSITIVE_STRING\n    }), obj.inputText && {\n      inputText: SENSITIVE_STRING\n    }), obj.sessionAttributes && {\n      sessionAttributes: SENSITIVE_STRING\n    });\n  };\n})(PostTextRequest || (PostTextRequest = {}));\n\nexport var IntentConfidence;\n\n(function (IntentConfidence) {\n  IntentConfidence.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IntentConfidence || (IntentConfidence = {}));\n\nexport var PredictedIntent;\n\n(function (PredictedIntent) {\n  PredictedIntent.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.slots && {\n      slots: SENSITIVE_STRING\n    });\n  };\n})(PredictedIntent || (PredictedIntent = {}));\n\nexport var ContentType;\n\n(function (ContentType) {\n  ContentType[\"GENERIC\"] = \"application/vnd.amazonaws.card.generic\";\n})(ContentType || (ContentType = {}));\n\nexport var Button;\n\n(function (Button) {\n  Button.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Button || (Button = {}));\n\nexport var GenericAttachment;\n\n(function (GenericAttachment) {\n  GenericAttachment.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GenericAttachment || (GenericAttachment = {}));\n\nexport var ResponseCard;\n\n(function (ResponseCard) {\n  ResponseCard.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ResponseCard || (ResponseCard = {}));\n\nexport var SentimentResponse;\n\n(function (SentimentResponse) {\n  SentimentResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SentimentResponse || (SentimentResponse = {}));\n\nexport var PostTextResponse;\n\n(function (PostTextResponse) {\n  PostTextResponse.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign(__assign(__assign({}, obj), obj.alternativeIntents && {\n      alternativeIntents: obj.alternativeIntents.map(function (item) {\n        return PredictedIntent.filterSensitiveLog(item);\n      })\n    }), obj.message && {\n      message: SENSITIVE_STRING\n    }), obj.sessionAttributes && {\n      sessionAttributes: SENSITIVE_STRING\n    }), obj.slots && {\n      slots: SENSITIVE_STRING\n    });\n  };\n})(PostTextResponse || (PostTextResponse = {}));\n\nexport var PutSessionRequest;\n\n(function (PutSessionRequest) {\n  PutSessionRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign(__assign({}, obj), obj.dialogAction && {\n      dialogAction: DialogAction.filterSensitiveLog(obj.dialogAction)\n    }), obj.recentIntentSummaryView && {\n      recentIntentSummaryView: obj.recentIntentSummaryView.map(function (item) {\n        return IntentSummary.filterSensitiveLog(item);\n      })\n    }), obj.sessionAttributes && {\n      sessionAttributes: SENSITIVE_STRING\n    });\n  };\n})(PutSessionRequest || (PutSessionRequest = {}));\n\nexport var PutSessionResponse;\n\n(function (PutSessionResponse) {\n  PutSessionResponse.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.message && {\n      message: SENSITIVE_STRING\n    });\n  };\n})(PutSessionResponse || (PutSessionResponse = {}));","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractInteractionsProvider');\n\nvar AbstractInteractionsProvider =\n/** @class */\nfunction () {\n  function AbstractInteractionsProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._config = options;\n  }\n\n  AbstractInteractionsProvider.prototype.configure = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this._config = __assign(__assign({}, this._config), config);\n    logger.debug(\"configure \" + this.getProviderName(), this._config);\n    return this.options;\n  };\n\n  AbstractInteractionsProvider.prototype.getCategory = function () {\n    return 'Interactions';\n  };\n\n  Object.defineProperty(AbstractInteractionsProvider.prototype, \"options\", {\n    get: function get() {\n      return __assign({}, this._config);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AbstractInteractionsProvider;\n}();\n\nexport { AbstractInteractionsProvider };","// Partition default templates\nvar AWS_TEMPLATE = \"runtime.lex.{region}.amazonaws.com\";\nvar AWS_CN_TEMPLATE = \"runtime.lex.{region}.amazonaws.com.cn\";\nvar AWS_ISO_TEMPLATE = \"runtime.lex.{region}.c2s.ic.gov\";\nvar AWS_ISO_B_TEMPLATE = \"runtime.lex.{region}.sc2s.sgov.gov\";\nvar AWS_US_GOV_TEMPLATE = \"runtime.lex.{region}.amazonaws.com\"; // Partition regions\n\nvar AWS_REGIONS = new Set([\"ap-east-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-south-1\", \"ap-southeast-1\", \"ap-southeast-2\", \"ca-central-1\", \"eu-central-1\", \"eu-north-1\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"me-south-1\", \"sa-east-1\", \"us-east-1\", \"us-east-2\", \"us-west-1\", \"us-west-2\"]);\nvar AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nvar AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nvar AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nvar AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\nexport var defaultRegionInfoProvider = function defaultRegionInfoProvider(region, options) {\n  var regionInfo = undefined;\n\n  switch (region) {\n    // First, try to match exact region names.\n    case \"eu-west-1\":\n      regionInfo = {\n        hostname: \"runtime.lex.eu-west-1.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"lex\"\n      };\n      break;\n\n    case \"us-east-1\":\n      regionInfo = {\n        hostname: \"runtime.lex.us-east-1.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"lex\"\n      };\n      break;\n\n    case \"us-west-2\":\n      regionInfo = {\n        hostname: \"runtime.lex.us-west-2.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"lex\"\n      };\n      break;\n    // Next, try to match partition endpoints.\n\n    default:\n      if (AWS_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\",\n          signingService: \"lex\"\n        };\n      }\n\n      if (AWS_CN_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-cn\"\n        };\n      }\n\n      if (AWS_ISO_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso\"\n        };\n      }\n\n      if (AWS_ISO_B_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso-b\"\n        };\n      }\n\n      if (AWS_US_GOV_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-us-gov\"\n        };\n      } // Finally, assume it's an AWS partition endpoint.\n\n\n      if (regionInfo === undefined) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\",\n          signingService: \"lex\"\n        };\n      }\n\n  }\n\n  return Promise.resolve(regionInfo);\n};","import { defaultRegionInfoProvider } from \"./endpoints\";\nexport var ClientSharedValues = {\n  apiVersion: \"2016-11-28\",\n  disableHostPrefix: false,\n  logger: {},\n  regionInfoProvider: defaultRegionInfoProvider,\n  signingName: \"lex\"\n};","import { __assign } from \"tslib\";\nimport packageInfo from \"./package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidFunction } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { parseUrl } from \"@aws-sdk/url-parser-browser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\nexport var ClientDefaultValues = __assign(__assign({}, ClientSharedValues), {\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: invalidFunction(\"Credential is missing\"),\n  defaultUserAgent: defaultUserAgent(packageInfo.name, packageInfo.version),\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  region: invalidFunction(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector: streamCollector,\n  urlParser: parseUrl,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8\n});","import { __assign, __extends } from \"tslib\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Amazon Lex provides both build and runtime endpoints. Each endpoint provides a set of\n *       operations (API). Your conversational bot uses the runtime API to understand user utterances\n *       (user input text or voice). For example, suppose a user says \"I want pizza\", your bot sends\n *       this input to Amazon Lex using the runtime API. Amazon Lex recognizes that the user request is\n *       for the OrderPizza intent (one of the intents defined in the bot). Then Amazon Lex engages in\n *       user conversation on behalf of the bot to elicit required information (slot values, such as\n *       pizza size and crust type), and then performs fulfillment activity (that you configured when\n *       you created the bot). You use the build-time API to create and manage your Amazon Lex bot. For\n *       a list of build-time operations, see the build-time API, . </p>\n */\n\nvar LexRuntimeServiceClient =\n/** @class */\nfunction (_super) {\n  __extends(LexRuntimeServiceClient, _super);\n\n  function LexRuntimeServiceClient(configuration) {\n    var _this = this;\n\n    var _config_0 = __assign(__assign({}, __ClientDefaultValues), configuration);\n\n    var _config_1 = resolveRegionConfig(_config_0);\n\n    var _config_2 = resolveEndpointsConfig(_config_1);\n\n    var _config_3 = resolveAwsAuthConfig(_config_2);\n\n    var _config_4 = resolveRetryConfig(_config_3);\n\n    var _config_5 = resolveUserAgentConfig(_config_4);\n\n    var _config_6 = resolveHostHeaderConfig(_config_5);\n\n    _this = _super.call(this, _config_6) || this;\n    _this.config = _config_6;\n\n    _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n\n    _this.middlewareStack.use(getRetryPlugin(_this.config));\n\n    _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n\n    _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n\n    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n\n    _this.middlewareStack.use(getLoggerPlugin(_this.config));\n\n    return _this;\n  }\n\n  LexRuntimeServiceClient.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n\n  return LexRuntimeServiceClient;\n}(__Client);\n\nexport { LexRuntimeServiceClient };","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { AbstractInteractionsProvider } from './InteractionsProvider';\nimport { LexRuntimeServiceClient, PostTextCommand, PostContentCommand } from '@aws-sdk/client-lex-runtime-service';\nimport { ConsoleLogger as Logger, Credentials, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { convert } from './AWSLexProviderHelper/convert';\nvar logger = new Logger('AWSLexProvider');\n\nvar AWSLexProvider =\n/** @class */\nfunction (_super) {\n  __extends(AWSLexProvider, _super);\n\n  function AWSLexProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this, options) || this;\n\n    _this._botsCompleteCallback = {};\n    return _this;\n  }\n\n  AWSLexProvider.prototype.getProviderName = function () {\n    return 'AWSLexProvider';\n  };\n\n  AWSLexProvider.prototype.reportBotStatus = function (data, botname) {\n    var _this = this; // Check if state is fulfilled to resolve onFullfilment promise\n\n\n    logger.debug('postContent state', data.dialogState);\n\n    if (data.dialogState === 'ReadyForFulfillment' || data.dialogState === 'Fulfilled') {\n      if (typeof this._botsCompleteCallback[botname] === 'function') {\n        setTimeout(function () {\n          return _this._botsCompleteCallback[botname](null, {\n            slots: data.slots\n          });\n        }, 0);\n      }\n\n      if (this._config && typeof this._config[botname].onComplete === 'function') {\n        setTimeout(function () {\n          return _this._config[botname].onComplete(null, {\n            slots: data.slots\n          });\n        }, 0);\n      }\n    }\n\n    if (data.dialogState === 'Failed') {\n      if (typeof this._botsCompleteCallback[botname] === 'function') {\n        setTimeout(function () {\n          return _this._botsCompleteCallback[botname]('Bot conversation failed');\n        }, 0);\n      }\n\n      if (this._config && typeof this._config[botname].onComplete === 'function') {\n        setTimeout(function () {\n          return _this._config[botname].onComplete('Bot conversation failed');\n        }, 0);\n      }\n    }\n  };\n\n  AWSLexProvider.prototype.sendMessage = function (botname, message) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, params, postTextCommand, data, err_1, content, messageType, postContentCommand, data, audioArray, err_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._config[botname]) {\n              return [2\n              /*return*/\n              , Promise.reject('Bot ' + botname + ' does not exist')];\n            }\n\n            return [4\n            /*yield*/\n            , Credentials.get()];\n\n          case 1:\n            credentials = _a.sent();\n\n            if (!credentials) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            this.lexRuntimeServiceClient = new LexRuntimeServiceClient({\n              region: this._config[botname].region,\n              credentials: credentials,\n              customUserAgent: getAmplifyUserAgent()\n            });\n            if (!(typeof message === 'string')) return [3\n            /*break*/\n            , 6];\n            params = {\n              botAlias: this._config[botname].alias,\n              botName: botname,\n              inputText: message,\n              userId: credentials.identityId\n            };\n            logger.debug('postText to lex', message);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            postTextCommand = new PostTextCommand(params);\n            return [4\n            /*yield*/\n            , this.lexRuntimeServiceClient.send(postTextCommand)];\n\n          case 3:\n            data = _a.sent();\n            this.reportBotStatus(data, botname);\n            return [2\n            /*return*/\n            , data];\n\n          case 4:\n            err_1 = _a.sent();\n            return [2\n            /*return*/\n            , Promise.reject(err_1)];\n\n          case 5:\n            return [3\n            /*break*/\n            , 11];\n\n          case 6:\n            content = message.content, messageType = message.options.messageType;\n\n            if (messageType === 'voice') {\n              params = {\n                botAlias: this._config[botname].alias,\n                botName: botname,\n                contentType: 'audio/x-l16; sample-rate=16000',\n                inputStream: content,\n                userId: credentials.identityId,\n                accept: 'audio/mpeg'\n              };\n            } else {\n              params = {\n                botAlias: this._config[botname].alias,\n                botName: botname,\n                contentType: 'text/plain; charset=utf-8',\n                inputStream: content,\n                userId: credentials.identityId,\n                accept: 'audio/mpeg'\n              };\n            }\n\n            logger.debug('postContent to lex', message);\n            _a.label = 7;\n\n          case 7:\n            _a.trys.push([7, 10,, 11]);\n\n            postContentCommand = new PostContentCommand(params);\n            return [4\n            /*yield*/\n            , this.lexRuntimeServiceClient.send(postContentCommand)];\n\n          case 8:\n            data = _a.sent();\n            return [4\n            /*yield*/\n            , convert(data.audioStream)];\n\n          case 9:\n            audioArray = _a.sent();\n            this.reportBotStatus(data, botname);\n            return [2\n            /*return*/\n            , __assign(__assign({}, data), {\n              audioStream: audioArray\n            })];\n\n          case 10:\n            err_2 = _a.sent();\n            return [2\n            /*return*/\n            , Promise.reject(err_2)];\n\n          case 11:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSLexProvider.prototype.onComplete = function (botname, callback) {\n    if (!this._config[botname]) {\n      throw new ErrorEvent('Bot ' + botname + ' does not exist');\n    }\n\n    this._botsCompleteCallback[botname] = callback;\n  };\n\n  return AWSLexProvider;\n}(AbstractInteractionsProvider);\n\nexport { AWSLexProvider };","import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { LazyJsonString as __LazyJsonString, extendedEncodeURIComponent as __extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1DeleteSessionCommand = function serializeAws_restJson1DeleteSessionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n\n          if (input.botAlias !== undefined) {\n            labelValue = input.botAlias;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAlias.\");\n          }\n\n          if (input.userId !== undefined) {\n            labelValue = input.userId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: userId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: userId.\");\n          }\n\n          if (input.botName !== undefined) {\n            labelValue = input.botName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botName.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSessionCommand = function serializeAws_restJson1GetSessionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n\n          if (input.botAlias !== undefined) {\n            labelValue = input.botAlias;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAlias.\");\n          }\n\n          if (input.userId !== undefined) {\n            labelValue = input.userId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: userId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: userId.\");\n          }\n\n          if (input.botName !== undefined) {\n            labelValue = input.botName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botName.\");\n          }\n\n          query = __assign({}, input.checkpointLabelFilter !== undefined && {\n            checkpointLabelFilter: input.checkpointLabelFilter\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PostContentCommand = function serializeAws_restJson1PostContentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"Content-Type\": \"application/octet-stream\",\n            \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\"\n          }, isSerializableHeaderValue(input.requestAttributes) && {\n            \"x-amz-lex-request-attributes\": __LazyJsonString.fromObject(input.requestAttributes)\n          }), isSerializableHeaderValue(input.sessionAttributes) && {\n            \"x-amz-lex-session-attributes\": __LazyJsonString.fromObject(input.sessionAttributes)\n          }), isSerializableHeaderValue(input.contentType) && {\n            \"Content-Type\": input.contentType\n          }), isSerializableHeaderValue(input.accept) && {\n            Accept: input.accept\n          });\n          resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/content\";\n\n          if (input.botAlias !== undefined) {\n            labelValue = input.botAlias;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAlias.\");\n          }\n\n          if (input.botName !== undefined) {\n            labelValue = input.botName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botName.\");\n          }\n\n          if (input.userId !== undefined) {\n            labelValue = input.userId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: userId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: userId.\");\n          }\n\n          if (input.inputStream !== undefined) {\n            body = input.inputStream;\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PostTextCommand = function serializeAws_restJson1PostTextCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"application/json\"\n          };\n          resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/text\";\n\n          if (input.userId !== undefined) {\n            labelValue = input.userId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: userId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: userId.\");\n          }\n\n          if (input.botAlias !== undefined) {\n            labelValue = input.botAlias;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAlias.\");\n          }\n\n          if (input.botName !== undefined) {\n            labelValue = input.botName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botName.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign({}, input.inputText !== undefined && {\n            inputText: input.inputText\n          }), input.requestAttributes !== undefined && {\n            requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n          }), input.sessionAttributes !== undefined && {\n            sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context)\n          }));\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutSessionCommand = function serializeAws_restJson1PutSessionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/json\"\n          }, isSerializableHeaderValue(input.accept) && {\n            Accept: input.accept\n          });\n          resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n\n          if (input.userId !== undefined) {\n            labelValue = input.userId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: userId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: userId.\");\n          }\n\n          if (input.botAlias !== undefined) {\n            labelValue = input.botAlias;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAlias.\");\n          }\n\n          if (input.botName !== undefined) {\n            labelValue = input.botName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botName.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign({}, input.dialogAction !== undefined && {\n            dialogAction: serializeAws_restJson1DialogAction(input.dialogAction, context)\n          }), input.recentIntentSummaryView !== undefined && {\n            recentIntentSummaryView: serializeAws_restJson1IntentSummaryList(input.recentIntentSummaryView, context)\n          }), input.sessionAttributes !== undefined && {\n            sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context)\n          }));\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteSessionCommand = function deserializeAws_restJson1DeleteSessionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteSessionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            botAlias: undefined,\n            botName: undefined,\n            sessionId: undefined,\n            userId: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.botAlias !== undefined && data.botAlias !== null) {\n            contents.botAlias = data.botAlias;\n          }\n\n          if (data.botName !== undefined && data.botName !== null) {\n            contents.botName = data.botName;\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = data.sessionId;\n          }\n\n          if (data.userId !== undefined && data.userId !== null) {\n            contents.userId = data.userId;\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSessionCommandError = function deserializeAws_restJson1DeleteSessionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalFailureException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSessionCommand = function deserializeAws_restJson1GetSessionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSessionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            dialogAction: undefined,\n            recentIntentSummaryView: undefined,\n            sessionAttributes: undefined,\n            sessionId: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.dialogAction !== undefined && data.dialogAction !== null) {\n            contents.dialogAction = deserializeAws_restJson1DialogAction(data.dialogAction, context);\n          }\n\n          if (data.recentIntentSummaryView !== undefined && data.recentIntentSummaryView !== null) {\n            contents.recentIntentSummaryView = deserializeAws_restJson1IntentSummaryList(data.recentIntentSummaryView, context);\n          }\n\n          if (data.sessionAttributes !== undefined && data.sessionAttributes !== null) {\n            contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = data.sessionId;\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSessionCommandError = function deserializeAws_restJson1GetSessionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InternalFailureException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PostContentCommand = function deserializeAws_restJson1PostContentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restJson1PostContentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        alternativeIntents: undefined,\n        audioStream: undefined,\n        botVersion: undefined,\n        contentType: undefined,\n        dialogState: undefined,\n        inputTranscript: undefined,\n        intentName: undefined,\n        message: undefined,\n        messageFormat: undefined,\n        nluIntentConfidence: undefined,\n        sentimentResponse: undefined,\n        sessionAttributes: undefined,\n        sessionId: undefined,\n        slotToElicit: undefined,\n        slots: undefined\n      };\n\n      if (output.headers[\"x-amz-lex-alternative-intents\"] !== undefined) {\n        contents.alternativeIntents = new __LazyJsonString(output.headers[\"x-amz-lex-alternative-intents\"]);\n      }\n\n      if (output.headers[\"x-amz-lex-message-format\"] !== undefined) {\n        contents.messageFormat = output.headers[\"x-amz-lex-message-format\"];\n      }\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.contentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"x-amz-lex-message\"] !== undefined) {\n        contents.message = output.headers[\"x-amz-lex-message\"];\n      }\n\n      if (output.headers[\"x-amz-lex-bot-version\"] !== undefined) {\n        contents.botVersion = output.headers[\"x-amz-lex-bot-version\"];\n      }\n\n      if (output.headers[\"x-amz-lex-sentiment\"] !== undefined) {\n        contents.sentimentResponse = output.headers[\"x-amz-lex-sentiment\"];\n      }\n\n      if (output.headers[\"x-amz-lex-slots\"] !== undefined) {\n        contents.slots = new __LazyJsonString(output.headers[\"x-amz-lex-slots\"]);\n      }\n\n      if (output.headers[\"x-amz-lex-input-transcript\"] !== undefined) {\n        contents.inputTranscript = output.headers[\"x-amz-lex-input-transcript\"];\n      }\n\n      if (output.headers[\"x-amz-lex-slot-to-elicit\"] !== undefined) {\n        contents.slotToElicit = output.headers[\"x-amz-lex-slot-to-elicit\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-attributes\"] !== undefined) {\n        contents.sessionAttributes = new __LazyJsonString(output.headers[\"x-amz-lex-session-attributes\"]);\n      }\n\n      if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n        contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n      }\n\n      if (output.headers[\"x-amz-lex-dialog-state\"] !== undefined) {\n        contents.dialogState = output.headers[\"x-amz-lex-dialog-state\"];\n      }\n\n      if (output.headers[\"x-amz-lex-intent-name\"] !== undefined) {\n        contents.intentName = output.headers[\"x-amz-lex-intent-name\"];\n      }\n\n      if (output.headers[\"x-amz-lex-nlu-intent-confidence\"] !== undefined) {\n        contents.nluIntentConfidence = new __LazyJsonString(output.headers[\"x-amz-lex-nlu-intent-confidence\"]);\n      }\n\n      data = output.body;\n      contents.audioStream = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1PostContentCommandError = function deserializeAws_restJson1PostContentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, parsedBody, message;\n\n    var _p;\n\n    return __generator(this, function (_q) {\n      switch (_q.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _p = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_p.body = _q.sent(), _p)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"LoopDetectedException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.lexruntimeservice#LoopDetectedException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"NotAcceptableException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.lexruntimeservice#NotAcceptableException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"RequestTimeoutException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.lexruntimeservice#RequestTimeoutException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"UnsupportedMediaTypeException\":\n              return [3\n              /*break*/\n              , 22];\n\n            case \"com.amazonaws.lexruntimeservice#UnsupportedMediaTypeException\":\n              return [3\n              /*break*/\n              , 22];\n          }\n\n          return [3\n          /*break*/\n          , 24];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 18:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 20:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1RequestTimeoutExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 22:\n          _o = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse(parsedOutput, context)];\n\n        case 23:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([_q.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 25];\n\n        case 24:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _q.label = 25;\n\n        case 25:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PostTextCommand = function deserializeAws_restJson1PostTextCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PostTextCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            alternativeIntents: undefined,\n            botVersion: undefined,\n            dialogState: undefined,\n            intentName: undefined,\n            message: undefined,\n            messageFormat: undefined,\n            nluIntentConfidence: undefined,\n            responseCard: undefined,\n            sentimentResponse: undefined,\n            sessionAttributes: undefined,\n            sessionId: undefined,\n            slotToElicit: undefined,\n            slots: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.alternativeIntents !== undefined && data.alternativeIntents !== null) {\n            contents.alternativeIntents = deserializeAws_restJson1IntentList(data.alternativeIntents, context);\n          }\n\n          if (data.botVersion !== undefined && data.botVersion !== null) {\n            contents.botVersion = data.botVersion;\n          }\n\n          if (data.dialogState !== undefined && data.dialogState !== null) {\n            contents.dialogState = data.dialogState;\n          }\n\n          if (data.intentName !== undefined && data.intentName !== null) {\n            contents.intentName = data.intentName;\n          }\n\n          if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n          }\n\n          if (data.messageFormat !== undefined && data.messageFormat !== null) {\n            contents.messageFormat = data.messageFormat;\n          }\n\n          if (data.nluIntentConfidence !== undefined && data.nluIntentConfidence !== null) {\n            contents.nluIntentConfidence = deserializeAws_restJson1IntentConfidence(data.nluIntentConfidence, context);\n          }\n\n          if (data.responseCard !== undefined && data.responseCard !== null) {\n            contents.responseCard = deserializeAws_restJson1ResponseCard(data.responseCard, context);\n          }\n\n          if (data.sentimentResponse !== undefined && data.sentimentResponse !== null) {\n            contents.sentimentResponse = deserializeAws_restJson1SentimentResponse(data.sentimentResponse, context);\n          }\n\n          if (data.sessionAttributes !== undefined && data.sessionAttributes !== null) {\n            contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = data.sessionId;\n          }\n\n          if (data.slotToElicit !== undefined && data.slotToElicit !== null) {\n            contents.slotToElicit = data.slotToElicit;\n          }\n\n          if (data.slots !== undefined && data.slots !== null) {\n            contents.slots = deserializeAws_restJson1StringMap(data.slots, context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PostTextCommandError = function deserializeAws_restJson1PostTextCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"LoopDetectedException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.lexruntimeservice#LoopDetectedException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutSessionCommand = function deserializeAws_restJson1PutSessionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restJson1PutSessionCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        audioStream: undefined,\n        contentType: undefined,\n        dialogState: undefined,\n        intentName: undefined,\n        message: undefined,\n        messageFormat: undefined,\n        sessionAttributes: undefined,\n        sessionId: undefined,\n        slotToElicit: undefined,\n        slots: undefined\n      };\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.contentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"x-amz-lex-intent-name\"] !== undefined) {\n        contents.intentName = output.headers[\"x-amz-lex-intent-name\"];\n      }\n\n      if (output.headers[\"x-amz-lex-message-format\"] !== undefined) {\n        contents.messageFormat = output.headers[\"x-amz-lex-message-format\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-attributes\"] !== undefined) {\n        contents.sessionAttributes = new __LazyJsonString(output.headers[\"x-amz-lex-session-attributes\"]);\n      }\n\n      if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n        contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n      }\n\n      if (output.headers[\"x-amz-lex-slot-to-elicit\"] !== undefined) {\n        contents.slotToElicit = output.headers[\"x-amz-lex-slot-to-elicit\"];\n      }\n\n      if (output.headers[\"x-amz-lex-slots\"] !== undefined) {\n        contents.slots = new __LazyJsonString(output.headers[\"x-amz-lex-slots\"]);\n      }\n\n      if (output.headers[\"x-amz-lex-message\"] !== undefined) {\n        contents.message = output.headers[\"x-amz-lex-message\"];\n      }\n\n      if (output.headers[\"x-amz-lex-dialog-state\"] !== undefined) {\n        contents.dialogState = output.headers[\"x-amz-lex-dialog-state\"];\n      }\n\n      data = output.body;\n      contents.audioStream = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutSessionCommandError = function deserializeAws_restJson1PutSessionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.lexruntimeservice#BadGatewayException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.lexruntimeservice#BadRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.lexruntimeservice#ConflictException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.lexruntimeservice#DependencyFailedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.lexruntimeservice#InternalFailureException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.lexruntimeservice#LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"NotAcceptableException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.lexruntimeservice#NotAcceptableException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.lexruntimeservice#NotFoundException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadGatewayExceptionResponse = function deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BadGatewayException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadRequestExceptionResponse = function deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BadRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConflictExceptionResponse = function deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1DependencyFailedExceptionResponse = function deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"DependencyFailedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1InternalFailureExceptionResponse = function deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InternalFailureException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1LimitExceededExceptionResponse = function deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n        retryAfterSeconds: undefined\n      };\n\n      if (parsedOutput.headers[\"retry-after\"] !== undefined) {\n        contents.retryAfterSeconds = parsedOutput.headers[\"retry-after\"];\n      }\n\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1LoopDetectedExceptionResponse = function deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"LoopDetectedException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1NotAcceptableExceptionResponse = function deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NotAcceptableException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1NotFoundExceptionResponse = function deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1RequestTimeoutExceptionResponse = function deserializeAws_restJson1RequestTimeoutExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"RequestTimeoutException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse = function deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"UnsupportedMediaTypeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = data.message;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restJson1DialogAction = function serializeAws_restJson1DialogAction(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.fulfillmentState !== undefined && {\n    fulfillmentState: input.fulfillmentState\n  }), input.intentName !== undefined && {\n    intentName: input.intentName\n  }), input.message !== undefined && {\n    message: input.message\n  }), input.messageFormat !== undefined && {\n    messageFormat: input.messageFormat\n  }), input.slotToElicit !== undefined && {\n    slotToElicit: input.slotToElicit\n  }), input.slots !== undefined && {\n    slots: serializeAws_restJson1StringMap(input.slots, context)\n  }), input.type !== undefined && {\n    type: input.type\n  });\n};\n\nvar serializeAws_restJson1IntentSummary = function serializeAws_restJson1IntentSummary(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.checkpointLabel !== undefined && {\n    checkpointLabel: input.checkpointLabel\n  }), input.confirmationStatus !== undefined && {\n    confirmationStatus: input.confirmationStatus\n  }), input.dialogActionType !== undefined && {\n    dialogActionType: input.dialogActionType\n  }), input.fulfillmentState !== undefined && {\n    fulfillmentState: input.fulfillmentState\n  }), input.intentName !== undefined && {\n    intentName: input.intentName\n  }), input.slotToElicit !== undefined && {\n    slotToElicit: input.slotToElicit\n  }), input.slots !== undefined && {\n    slots: serializeAws_restJson1StringMap(input.slots, context)\n  });\n};\n\nvar serializeAws_restJson1IntentSummaryList = function serializeAws_restJson1IntentSummaryList(input, context) {\n  return input.map(function (entry) {\n    return serializeAws_restJson1IntentSummary(entry, context);\n  });\n};\n\nvar serializeAws_restJson1StringMap = function serializeAws_restJson1StringMap(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1Button = function deserializeAws_restJson1Button(output, context) {\n  return {\n    text: output.text !== undefined && output.text !== null ? output.text : undefined,\n    value: output.value !== undefined && output.value !== null ? output.value : undefined\n  };\n};\n\nvar deserializeAws_restJson1DialogAction = function deserializeAws_restJson1DialogAction(output, context) {\n  return {\n    fulfillmentState: output.fulfillmentState !== undefined && output.fulfillmentState !== null ? output.fulfillmentState : undefined,\n    intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    messageFormat: output.messageFormat !== undefined && output.messageFormat !== null ? output.messageFormat : undefined,\n    slotToElicit: output.slotToElicit !== undefined && output.slotToElicit !== null ? output.slotToElicit : undefined,\n    slots: output.slots !== undefined && output.slots !== null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined,\n    type: output.type !== undefined && output.type !== null ? output.type : undefined\n  };\n};\n\nvar deserializeAws_restJson1GenericAttachment = function deserializeAws_restJson1GenericAttachment(output, context) {\n  return {\n    attachmentLinkUrl: output.attachmentLinkUrl !== undefined && output.attachmentLinkUrl !== null ? output.attachmentLinkUrl : undefined,\n    buttons: output.buttons !== undefined && output.buttons !== null ? deserializeAws_restJson1listOfButtons(output.buttons, context) : undefined,\n    imageUrl: output.imageUrl !== undefined && output.imageUrl !== null ? output.imageUrl : undefined,\n    subTitle: output.subTitle !== undefined && output.subTitle !== null ? output.subTitle : undefined,\n    title: output.title !== undefined && output.title !== null ? output.title : undefined\n  };\n};\n\nvar deserializeAws_restJson1genericAttachmentList = function deserializeAws_restJson1genericAttachmentList(output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1GenericAttachment(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1IntentConfidence = function deserializeAws_restJson1IntentConfidence(output, context) {\n  return {\n    score: output.score !== undefined && output.score !== null ? output.score : undefined\n  };\n};\n\nvar deserializeAws_restJson1IntentList = function deserializeAws_restJson1IntentList(output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1PredictedIntent(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1IntentSummary = function deserializeAws_restJson1IntentSummary(output, context) {\n  return {\n    checkpointLabel: output.checkpointLabel !== undefined && output.checkpointLabel !== null ? output.checkpointLabel : undefined,\n    confirmationStatus: output.confirmationStatus !== undefined && output.confirmationStatus !== null ? output.confirmationStatus : undefined,\n    dialogActionType: output.dialogActionType !== undefined && output.dialogActionType !== null ? output.dialogActionType : undefined,\n    fulfillmentState: output.fulfillmentState !== undefined && output.fulfillmentState !== null ? output.fulfillmentState : undefined,\n    intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n    slotToElicit: output.slotToElicit !== undefined && output.slotToElicit !== null ? output.slotToElicit : undefined,\n    slots: output.slots !== undefined && output.slots !== null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1IntentSummaryList = function deserializeAws_restJson1IntentSummaryList(output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1IntentSummary(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1listOfButtons = function deserializeAws_restJson1listOfButtons(output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restJson1Button(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1PredictedIntent = function deserializeAws_restJson1PredictedIntent(output, context) {\n  return {\n    intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n    nluIntentConfidence: output.nluIntentConfidence !== undefined && output.nluIntentConfidence !== null ? deserializeAws_restJson1IntentConfidence(output.nluIntentConfidence, context) : undefined,\n    slots: output.slots !== undefined && output.slots !== null ? deserializeAws_restJson1StringMap(output.slots, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ResponseCard = function deserializeAws_restJson1ResponseCard(output, context) {\n  return {\n    contentType: output.contentType !== undefined && output.contentType !== null ? output.contentType : undefined,\n    genericAttachments: output.genericAttachments !== undefined && output.genericAttachments !== null ? deserializeAws_restJson1genericAttachmentList(output.genericAttachments, context) : undefined,\n    version: output.version !== undefined && output.version !== null ? output.version : undefined\n  };\n};\n\nvar deserializeAws_restJson1SentimentResponse = function deserializeAws_restJson1SentimentResponse(output, context) {\n  return {\n    sentimentLabel: output.sentimentLabel !== undefined && output.sentimentLabel !== null ? output.sentimentLabel : undefined,\n    sentimentScore: output.sentimentScore !== undefined && output.sentimentScore !== null ? output.sentimentScore : undefined\n  };\n};\n\nvar deserializeAws_restJson1StringMap = function deserializeAws_restJson1StringMap(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeMetadata = function deserializeMetadata(output) {\n  return {\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function collectBody(streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function collectBodyString(streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function isSerializableHeaderValue(value) {\n  return value !== undefined && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function parseBody(streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function loadRestJsonErrorCode(output, data) {\n  var findKey = function findKey(object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function sanitizeErrorCode(rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","import { __extends } from \"tslib\";\nimport { PostTextRequest, PostTextResponse } from \"../models/models_0\";\nimport { deserializeAws_restJson1PostTextCommand, serializeAws_restJson1PostTextCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n\nvar PostTextCommand =\n/** @class */\nfunction (_super) {\n  __extends(PostTextCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PostTextCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n\n  PostTextCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"LexRuntimeServiceClient\";\n    var commandName = \"PostTextCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PostTextRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PostTextResponse.filterSensitiveLog\n    };\n\n    if (typeof logger.info === \"function\") {\n      logger.info({\n        clientName: clientName,\n        commandName: commandName\n      });\n    }\n\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PostTextCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1PostTextCommand(input, context);\n  };\n\n  PostTextCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1PostTextCommand(output, context);\n  };\n\n  return PostTextCommand;\n}($Command);\n\nexport { PostTextCommand };","import { __extends } from \"tslib\";\nimport { PostContentRequest, PostContentResponse } from \"../models/models_0\";\nimport { deserializeAws_restJson1PostContentCommand, serializeAws_restJson1PostContentCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n\nvar PostContentCommand =\n/** @class */\nfunction (_super) {\n  __extends(PostContentCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PostContentCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n\n  PostContentCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"LexRuntimeServiceClient\";\n    var commandName = \"PostContentCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PostContentRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PostContentResponse.filterSensitiveLog\n    };\n\n    if (typeof logger.info === \"function\") {\n      logger.info({\n        clientName: clientName,\n        commandName: commandName\n      });\n    }\n\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PostContentCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1PostContentCommand(input, context);\n  };\n\n  PostContentCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1PostContentCommand(output, context);\n  };\n\n  return PostContentCommand;\n}($Command);\n\nexport { PostContentCommand };","export var convert = function convert(stream) {\n  if (stream instanceof Blob || stream instanceof ReadableStream) {\n    return new Response(stream).arrayBuffer().then(function (buffer) {\n      return new Uint8Array(buffer);\n    });\n  } else {\n    throw new Error('Readable is not supported.');\n  }\n};","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AWSLexProvider } from './Providers';\nvar logger = new Logger('Interactions');\n\nvar InteractionsClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize PubSub with AWS configurations\n   *\n   * @param {InteractionsOptions} options - Configuration object for Interactions\n   */\n  function InteractionsClass(options) {\n    this._options = options;\n    logger.debug('Interactions Options', this._options);\n    this._pluggables = {};\n  }\n\n  InteractionsClass.prototype.getModuleName = function () {\n    return 'Interactions';\n  };\n  /**\n   *\n   * @param {InteractionsOptions} options - Configuration object for Interactions\n   * @return {Object} - The current configuration\n   */\n\n\n  InteractionsClass.prototype.configure = function (options) {\n    var _this = this;\n\n    var opt = options ? options.Interactions || options : {};\n    logger.debug('configure Interactions', {\n      opt: opt\n    });\n    this._options = __assign(__assign({\n      bots: {}\n    }, opt), opt.Interactions);\n    var aws_bots_config = this._options.aws_bots_config;\n    var bots_config = this._options.bots;\n\n    if (!Object.keys(bots_config).length && aws_bots_config) {\n      // Convert aws_bots_config to bots object\n      if (Array.isArray(aws_bots_config)) {\n        aws_bots_config.forEach(function (bot) {\n          _this._options.bots[bot.name] = bot;\n        });\n      }\n    } // Check if AWSLex provider is already on pluggables\n\n\n    if (!this._pluggables.AWSLexProvider && bots_config && Object.keys(bots_config).map(function (key) {\n      return bots_config[key];\n    }).find(function (bot) {\n      return !bot.providerName || bot.providerName === 'AWSLexProvider';\n    })) {\n      this._pluggables.AWSLexProvider = new AWSLexProvider();\n    }\n\n    Object.keys(this._pluggables).map(function (key) {\n      _this._pluggables[key].configure(_this._options.bots);\n    });\n    return this._options;\n  };\n\n  InteractionsClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Interactions') {\n      if (!this._pluggables[pluggable.getProviderName()]) {\n        pluggable.configure(this._options.bots);\n        this._pluggables[pluggable.getProviderName()] = pluggable;\n        return;\n      } else {\n        throw new Error('Bot ' + pluggable.getProviderName() + ' already plugged');\n      }\n    }\n  };\n\n  InteractionsClass.prototype.send = function (botname, message) {\n    return __awaiter(this, void 0, void 0, function () {\n      var botProvider;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._options.bots || !this._options.bots[botname]) {\n              throw new Error('Bot ' + botname + ' does not exist');\n            }\n\n            botProvider = this._options.bots[botname].providerName || 'AWSLexProvider';\n\n            if (!this._pluggables[botProvider]) {\n              throw new Error('Bot ' + botProvider + ' does not have valid pluggin did you try addPluggable first?');\n            }\n\n            return [4\n            /*yield*/\n            , this._pluggables[botProvider].sendMessage(botname, message)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  InteractionsClass.prototype.onComplete = function (botname, callback) {\n    if (!this._options.bots || !this._options.bots[botname]) {\n      throw new Error('Bot ' + botname + ' does not exist');\n    }\n\n    var botProvider = this._options.bots[botname].providerName || 'AWSLexProvider';\n\n    if (!this._pluggables[botProvider]) {\n      throw new Error('Bot ' + botProvider + ' does not have valid pluggin did you try addPluggable first?');\n    }\n\n    this._pluggables[botProvider].onComplete(botname, callback);\n  };\n\n  return InteractionsClass;\n}();\n\nexport { InteractionsClass };\nexport var Interactions = new InteractionsClass(null);\nAmplify.register(Interactions);","var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport { r as registerInstance, h, c as createEvent, H as Host, g as getElement } from './index-39969785.js';\nimport { Logger, browserOrNode, I18n } from '@aws-amplify/core';\nimport '@aws-amplify/auth';\nimport { T as Translations } from './Translations-392acb9b.js';\nimport { d as NO_INTERACTIONS_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { Interactions } from '@aws-amplify/interactions'; // AudioRecorder settings\n\nvar RECORDER_EXPORT_MIME_TYPE = 'application/octet-stream';\nvar DEFAULT_EXPORT_SAMPLE_RATE = 16000;\nvar FFT_SIZE = 2048; // window size in samples for Fast Fourier Transform (FFT)\n\nvar FFT_MAX_DECIBELS = -10; // maximum power value in the scaling range for the FFT analysis data\n\nvar FFT_MIN_DECIBELS = -90; // minimum power value in the scaling range for the FFT analysis data\n\nvar FFT_SMOOTHING_TIME_CONSTANT = 0.85; // averaging constant with the last analysis frame\n\n/**\n * Merges multiple buffers into one.\n */\n\nvar mergeBuffers = function mergeBuffers(bufferArray, recLength) {\n  var result = new Float32Array(recLength);\n  var offset = 0;\n\n  for (var i = 0; i < bufferArray.length; i++) {\n    result.set(bufferArray[i], offset);\n    offset += bufferArray[i].length;\n  }\n\n  return result;\n};\n/**\n * Downsamples audio to desired export sample rate.\n */\n\n\nvar downsampleBuffer = function downsampleBuffer(buffer, recordSampleRate, exportSampleRate) {\n  if (exportSampleRate === recordSampleRate) {\n    return buffer;\n  }\n\n  var sampleRateRatio = recordSampleRate / exportSampleRate;\n  var newLength = Math.round(buffer.length / sampleRateRatio);\n  var result = new Float32Array(newLength);\n  var offsetResult = 0;\n  var offsetBuffer = 0;\n\n  while (offsetResult < result.length) {\n    var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n    var accum = 0,\n        count = 0;\n\n    for (var i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\n      accum += buffer[i];\n      count++;\n    }\n\n    result[offsetResult] = accum / count;\n    offsetResult++;\n    offsetBuffer = nextOffsetBuffer;\n  }\n\n  return result;\n};\n/**\n * converts raw audio values to 16 bit pcm.\n */\n\n\nvar floatTo16BitPCM = function floatTo16BitPCM(output, offset, input) {\n  var byteOffset = offset;\n\n  for (var i = 0; i < input.length; i++, byteOffset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(byteOffset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n  }\n};\n/**\n * Write given strings in big-endian order.\n */\n\n\nvar writeString = function writeString(view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n};\n/**\n * Encodes raw pcm audio into a wav file.\n */\n\n\nvar encodeWAV = function encodeWAV(samples, exportSampleRate) {\n  /**\n   * WAV file consists of three parts: RIFF header, WAVE subchunk, and data subchunk. We precompute the size of them.\n   */\n  var audioSize = samples.length * 2; // We use 16-bit samples, so we have (2 * sampleLength) bytes.\n\n  var fmtSize = 24; // Byte size of the fmt subchunk: 24 bytes that the audio information that we'll set below.\n\n  var dataSize = 8 + audioSize; // Byte size of the data subchunk: raw sound data plus 8 bytes for the subchunk descriptions.\n\n  var totalByteSize = 12 + fmtSize + dataSize; // Byte size of the whole file, including the chunk header / descriptor.\n  // create DataView object to write byte values into\n\n  var buffer = new ArrayBuffer(totalByteSize); // buffer to write the chunk values in.\n\n  var view = new DataView(buffer);\n  /**\n   * Start writing the .wav file. We write top to bottom, so byte offset (first numeric argument) increases strictly.\n   */\n  // RIFF header\n\n  writeString(view, 0, 'RIFF'); // At offset 0, write the letters \"RIFF\"\n\n  view.setUint32(4, fmtSize + dataSize, true); // At offset 4, write the size of fmt and data chunk size combined.\n\n  writeString(view, 8, 'WAVE'); // At offset 8, write the format type \"WAVE\"\n  // fmt subchunk\n\n  writeString(view, 12, 'fmt '); //chunkdId 'fmt '\n\n  view.setUint32(16, fmtSize - 8, true); // fmt subchunk size below this value. We set 8 bytes already, so subtract 8 bytes from fmtSize.\n\n  view.setUint16(20, 1, true); // Audiio format code, which is 1 for PCM.\n\n  view.setUint16(22, 1, true); // Number of audio channels. We use mono, ie 1.\n\n  view.setUint32(24, exportSampleRate, true); // Sample rate of the audio file.\n\n  view.setUint32(28, exportSampleRate * 2, true); // Data rate, or # of data bytes per second. Since each sample is 2 bytes, this is 2 * sampleRate.\n\n  view.setUint16(32, 2, true); // block align, # of bytes per sample including all channels, ie. 2 bytes.\n\n  view.setUint16(34, 16, true); // bits per sample, ie. 16 bits\n  // data subchunk\n\n  writeString(view, 36, 'data'); // write the chunkId 'data'\n\n  view.setUint32(40, audioSize, true); // Audio byte size\n\n  floatTo16BitPCM(view, 44, samples); // raw pcm values then go here.\n\n  return view;\n};\n/**\n * Given arrays of raw pcm audio, downsamples the audio to desired sample rate and encodes it to a wav audio file.\n *\n * @param recBuffer {Float32Array[]} - 2d float array containing the recorded raw audio\n * @param recLength {number} - total length of recorded audio\n * @param recordSampleRate {number} - sample rate of the recorded audio\n * @param exportSampleRate {number} - desired sample rate of the exported file\n */\n\n\nvar exportBuffer = function exportBuffer(recBuffer, recLength, recordSampleRate, exportSampleRate) {\n  var mergedBuffers = mergeBuffers(recBuffer, recLength);\n  var downsampledBuffer = downsampleBuffer(mergedBuffers, recordSampleRate, exportSampleRate);\n  var encodedWav = encodeWAV(downsampledBuffer, exportSampleRate);\n  var audioBlob = new Blob([encodedWav], {\n    type: RECORDER_EXPORT_MIME_TYPE\n  });\n  return audioBlob;\n};\n\nvar logger = new Logger('AudioRecorder');\n\nvar AudioRecorder =\n/** @class */\nfunction () {\n  function AudioRecorder(options) {\n    // input mic stream is stored in a buffer\n    this.streamBuffer = [];\n    this.streamBufferLength = 0;\n    this.recording = false;\n    this.options = options;\n  }\n  /**\n   * This must be called first to enable audio context and request microphone access.\n   * Once access granted, it connects all the necessary audio nodes to the context so that it can begin recording or playing.\n   */\n\n\n  AudioRecorder.prototype.init = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!browserOrNode().isBrowser) return [3\n            /*break*/\n            , 2];\n            window.AudioContext = window.AudioContext || window.webkitAudioContext;\n            this.audioContext = new AudioContext();\n            return [4\n            /*yield*/\n            , navigator.mediaDevices.getUserMedia({\n              audio: true\n            }).then(function (stream) {\n              _this.audioSupported = true;\n\n              _this.setupAudioNodes(stream);\n            }).catch(function () {\n              _this.audioSupported = false;\n              return Promise.reject('Audio is not supported');\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            this.audioSupported = false;\n            return [2\n            /*return*/\n            , Promise.reject('Audio is not supported')];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Setup audio nodes after successful `init`.\n   */\n\n\n  AudioRecorder.prototype.setupAudioNodes = function (stream) {\n    return __awaiter(this, void 0, void 0, function () {\n      var err_1, sourceNode, processorNode, analyserNode;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.audioContext.resume()];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            err_1 = _a.sent();\n            logger.error(err_1);\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            sourceNode = this.audioContext.createMediaStreamSource(stream);\n            processorNode = this.audioContext.createScriptProcessor(4096, 1, 1);\n\n            processorNode.onaudioprocess = function (audioProcessingEvent) {\n              if (!_this.recording) return;\n              var stream = audioProcessingEvent.inputBuffer.getChannelData(0);\n\n              _this.streamBuffer.push(new Float32Array(stream)); // set to a copy of the stream\n\n\n              _this.streamBufferLength += stream.length;\n\n              _this.analyse();\n            };\n\n            analyserNode = this.audioContext.createAnalyser();\n            analyserNode.minDecibels = FFT_MIN_DECIBELS;\n            analyserNode.maxDecibels = FFT_MAX_DECIBELS;\n            analyserNode.smoothingTimeConstant = FFT_SMOOTHING_TIME_CONSTANT;\n            sourceNode.connect(analyserNode);\n            analyserNode.connect(processorNode);\n            processorNode.connect(sourceNode.context.destination);\n            this.analyserNode = analyserNode;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Start recording audio and listen for silence.\n   *\n   * @param onSilence {SilenceHandler} - called whenever silence is detected\n   * @param visualizer {Visualizer} - called with audio data on each audio process to be used for visualization.\n   */\n\n\n  AudioRecorder.prototype.startRecording = function (onSilence, visualizer) {\n    return __awaiter(this, void 0, void 0, function () {\n      var context, err_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.recording || !this.audioSupported) return [2\n            /*return*/\n            ];\n\n            this.onSilence = onSilence || function () {};\n\n            this.visualizer = visualizer || function () {};\n\n            context = this.audioContext;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , context.resume()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_2 = _a.sent();\n            logger.error(err_2);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            this.start = Date.now();\n            this.recording = true;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Pause recording\n   */\n\n\n  AudioRecorder.prototype.stopRecording = function () {\n    if (!this.audioSupported) return;\n    this.recording = false;\n  };\n  /**\n   * Pause recording and clear audio buffer\n   */\n\n\n  AudioRecorder.prototype.clear = function () {\n    this.stopRecording();\n    this.streamBufferLength = 0;\n    this.streamBuffer = [];\n  };\n  /**\n   * Plays given audioStream with audioContext\n   *\n   * @param buffer {Uint8Array} - audioStream to be played\n   */\n\n\n  AudioRecorder.prototype.play = function (buffer) {\n    var _this = this;\n\n    if (!buffer || !this.audioSupported) return;\n    var myBlob = new Blob([buffer]);\n    return new Promise(function (res, rej) {\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        if (_this.playbackSource) _this.playbackSource.disconnect(); // disconnect previous playback source\n\n        _this.playbackSource = _this.audioContext.createBufferSource();\n\n        var successCallback = function successCallback(buf) {\n          _this.playbackSource.buffer = buf;\n\n          _this.playbackSource.connect(_this.audioContext.destination);\n\n          _this.playbackSource.onended = function () {\n            return res();\n          };\n\n          _this.playbackSource.start(0);\n        };\n\n        var errorCallback = function errorCallback(err) {\n          return rej(err);\n        };\n\n        _this.audioContext.decodeAudioData(fileReader.result, successCallback, errorCallback);\n      };\n\n      fileReader.onerror = function () {\n        return rej();\n      };\n\n      fileReader.readAsArrayBuffer(myBlob);\n    });\n  };\n  /**\n   * Stops playing audio if there's a playback source connected.\n   */\n\n\n  AudioRecorder.prototype.stop = function () {\n    if (this.playbackSource) {\n      this.playbackSource.stop();\n    }\n  };\n  /**\n   * Called after each audioProcess. Check for silence and give fft time domain data to visualizer.\n   */\n\n\n  AudioRecorder.prototype.analyse = function () {\n    if (!this.audioSupported) return;\n    var analyser = this.analyserNode;\n    analyser.fftSize = FFT_SIZE;\n    var bufferLength = analyser.fftSize;\n    var dataArray = new Uint8Array(bufferLength);\n    var amplitude = this.options.amplitude;\n    var time = this.options.time;\n    analyser.getByteTimeDomainData(dataArray);\n    this.visualizer(dataArray, bufferLength);\n\n    for (var i = 0; i < bufferLength; i++) {\n      // Normalize between -1 and 1.\n      var curr_value_time = dataArray[i] / 128 - 1.0;\n\n      if (curr_value_time > amplitude || curr_value_time < -1 * amplitude) {\n        this.start = Date.now();\n      }\n    }\n\n    var newtime = Date.now();\n    var elapsedTime = newtime - this.start;\n\n    if (elapsedTime > time) {\n      this.onSilence();\n    }\n  };\n  /**\n   * Encodes recorded buffer to a wav file and exports it to a blob.\n   *\n   * @param exportSampleRate {number} - desired sample rate of the exported buffer\n   */\n\n\n  AudioRecorder.prototype.exportWAV = function (exportSampleRate) {\n    if (exportSampleRate === void 0) {\n      exportSampleRate = DEFAULT_EXPORT_SAMPLE_RATE;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var recordSampleRate, blob;\n      return __generator(this, function (_a) {\n        if (!this.audioSupported) return [2\n        /*return*/\n        ];\n        recordSampleRate = this.audioContext.sampleRate;\n        blob = exportBuffer(this.streamBuffer, this.streamBufferLength, recordSampleRate, exportSampleRate);\n        this.clear();\n        return [2\n        /*return*/\n        , blob];\n      });\n    });\n  };\n\n  return AudioRecorder;\n}();\n\nvar visualize = function visualize(dataArray, bufferLength, canvas) {\n  if (!canvas) return;\n  if (!browserOrNode().isBrowser) throw new Error('Visualization is not supported on non-browsers.');\n\n  var _a = canvas.getBoundingClientRect(),\n      width = _a.width,\n      height = _a.height; // need to update the default canvas width and height\n\n\n  canvas.width = width;\n  canvas.height = height;\n  var canvasCtx = canvas.getContext('2d');\n  canvasCtx.fillStyle = 'white';\n  canvasCtx.clearRect(0, 0, width, height);\n\n  var draw = function draw() {\n    canvasCtx.fillRect(0, 0, width, height);\n    canvasCtx.lineWidth = 1;\n    var color = getComputedStyle(document.documentElement).getPropertyValue('--amplify-primary-color');\n    canvasCtx.strokeStyle = !color || color === '' ? '#ff9900' : color; // TODO: try separate css variable\n\n    canvasCtx.beginPath();\n    var sliceWidth = width * 1.0 / bufferLength;\n    var x = 0;\n\n    for (var i = 0; i < bufferLength || i % 3 === 0; i++) {\n      var value = dataArray[i] / 128.0;\n      var y = value * height / 2;\n\n      if (i === 0) {\n        canvasCtx.moveTo(x, y);\n      } else {\n        canvasCtx.lineTo(x, y);\n      }\n\n      x += sliceWidth;\n    }\n\n    canvasCtx.lineTo(canvas.width, canvas.height / 2);\n    canvasCtx.stroke();\n  }; // Register our draw function with requestAnimationFrame.\n\n\n  requestAnimationFrame(draw);\n};\n\nvar amplifyChatbotCss = \".bot .dot{background-color:var(--bot-dot-color)}.user .dot{background-color:var(--user-dot-color)}.dot-flashing{width:2.625rem}.dot-flashing .dot{display:inline-block;width:0.625rem;height:0.625rem;border-radius:10rem;opacity:0.65}.dot-flashing .left{-webkit-animation:dot-flashing 1s infinite alternate;animation:dot-flashing 1s infinite alternate;-webkit-animation-delay:0s;animation-delay:0s}.dot-flashing .middle{margin-left:0.375rem;margin-right:0.375rem;-webkit-animation:dot-flashing 1s infinite linear alternate;animation:dot-flashing 1s infinite linear alternate;-webkit-animation-delay:0.5s;animation-delay:0.5s}.dot-flashing .right{-webkit-animation:dot-flashing 1s infinite alternate;animation:dot-flashing 1s infinite alternate;-webkit-animation-delay:1s;animation-delay:1s}@-webkit-keyframes dot-flashing{0%{opacity:0.65}50%,100%{opacity:0.1}}@keyframes dot-flashing{0%{opacity:0.65}50%,100%{opacity:0.1}}:host{--width:28.75rem;--height:37.5rem;--header-color:var(--amplify-secondary-color);--header-size:var(--amplify-text-lg);--bot-background-color:rgb(230, 230, 230);--bot-text-color:black;--bot-dot-color:var(--bot-text-color);--user-background-color:var(--amplify-blue);--user-text-color:var(--amplify-white);--user-dot-color:var(--user-text-color)}.amplify-chatbot{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;background-color:var(--background-color);border-radius:0.375rem;-webkit-box-shadow:0.0625rem 0rem 0.25rem 0 rgba(0, 0, 0, 0.15);box-shadow:0.0625rem 0rem 0.25rem 0 rgba(0, 0, 0, 0.15);-webkit-box-sizing:border-box;box-sizing:border-box;font-family:var(--amplify-font-family);margin-bottom:1rem;width:100%;height:var(--height);max-width:var(--width)}@media (min-width: 672px){.amplify-chatbot{width:var(--width)}}.header{padding:1.25rem 0.375rem 1.25rem 0.375rem;color:var(--header-color);font-size:var(--header-size);font-weight:bold;text-align:center;word-wrap:break-word}.body{border-top:0.0625rem solid rgba(0, 0, 0, 0.05);padding:1.5rem 1rem 0 1rem;display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-direction:column;flex-direction:column;overflow:auto}.bubble{max-width:100%;padding:0.8em 1.4em;text-align:left;word-wrap:break-word;margin-bottom:0.625rem}.bot{margin-right:auto;background-color:var(--bot-background-color);color:var(--bot-text-color);border-radius:1.5rem 1.5rem 1.5rem 0}.user{margin-left:auto;background-color:var(--user-background-color);color:var(--user-text-color);border-radius:1.5rem 1.5rem 0 1.5rem}.footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;border-top:0.062rem solid rgba(0, 0, 0, 0.05);padding-right:0.625rem;min-height:3.125rem}.footer amplify-input{--border:none;--margin:0;-ms-flex-positive:1;flex-grow:1}canvas{margin-left:0.625rem;margin-right:0.625rem;-ms-flex-positive:1;flex-grow:1;height:3.125rem}.icon-button{--icon-height:1.25rem;--icon-fill:var(--amplify-primary-color);--padding:0.625rem;--width:auto}\"; // enum for possible bot states\n\nvar ChatState;\n\n(function (ChatState) {\n  ChatState[ChatState[\"Initial\"] = 0] = \"Initial\";\n  ChatState[ChatState[\"Listening\"] = 1] = \"Listening\";\n  ChatState[ChatState[\"SendingText\"] = 2] = \"SendingText\";\n  ChatState[ChatState[\"SendingVoice\"] = 3] = \"SendingVoice\";\n  ChatState[ChatState[\"Error\"] = 4] = \"Error\";\n})(ChatState || (ChatState = {})); // Message types\n\n\nvar MessageFrom;\n\n(function (MessageFrom) {\n  MessageFrom[\"Bot\"] = \"bot\";\n  MessageFrom[\"User\"] = \"user\";\n})(MessageFrom || (MessageFrom = {})); // Error types\n\n\nvar ChatErrorType;\n\n(function (ChatErrorType) {\n  ChatErrorType[ChatErrorType[\"Recoverable\"] = 0] = \"Recoverable\";\n  ChatErrorType[ChatErrorType[\"Unrecoverable\"] = 1] = \"Unrecoverable\";\n})(ChatErrorType || (ChatErrorType = {}));\n\nvar AmplifyChatbot =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Clear messages when conversation finishes */\n\n    this.clearOnComplete = false;\n    /** Continue listening to users after they send the message */\n\n    this.conversationModeOn = false;\n    /** Text placed in the top header */\n\n    this.botTitle = Translations.CHATBOT_TITLE;\n    /** Whether voice chat is enabled */\n\n    this.voiceEnabled = false;\n    /** Whether text chat is enabled */\n\n    this.textEnabled = true;\n    /** Amount of silence (in ms) to wait for */\n\n    this.silenceTime = 1500;\n    /** Noise threshold between -1 and 1. Anything below is considered a silence. */\n\n    this.silenceThreshold = 0.2;\n    /** Messages in current session */\n\n    this.messages = [];\n    /** Text input box value  */\n\n    this.text = '';\n    /** Current app state */\n\n    this.chatState = ChatState.Initial;\n    /**\n     * Rendering methods\n     */\n\n    this.messageJSX = function (messages) {\n      var messageList = messages.map(function (message) {\n        return h(\"div\", {\n          class: \"bubble \" + message.from\n        }, message.content);\n      });\n\n      if (_this.chatState === ChatState.SendingText || _this.chatState === ChatState.SendingVoice) {\n        // if waiting for voice message, show animation on user side because app is waiting for transcript. Else put it on bot side.\n        var client = _this.chatState === ChatState.SendingText ? MessageFrom.Bot : MessageFrom.User;\n        messageList.push(h(\"div\", {\n          class: \"bubble \" + client\n        }, h(\"div\", {\n          class: \"dot-flashing \" + client\n        }, h(\"span\", {\n          class: \"dot left\"\n        }), h(\"span\", {\n          class: \"dot middle\"\n        }), h(\"span\", {\n          class: \"dot right\"\n        }))));\n      }\n\n      return messageList;\n    };\n\n    this.chatCompleted = createEvent(this, \"chatCompleted\", 7);\n  } // Occurs when user presses enter in input box\n\n\n  class_1.prototype.submitHandler = function (_event) {\n    this.sendTextMessage();\n  };\n  /**\n   * Lifecycle functions\n   */\n\n\n  class_1.prototype.componentWillLoad = function () {\n    if (!Interactions || typeof Interactions.onComplete !== 'function') {\n      throw new Error(NO_INTERACTIONS_MODULE_FOUND);\n    }\n\n    this.validateProps();\n  };\n\n  class_1.prototype.componentDidRender = function () {\n    // scroll to the bottom if necessary\n    var body = this.element.shadowRoot.querySelector('.body');\n    body.scrollTop = body.scrollHeight;\n  };\n\n  class_1.prototype.validateProps = function () {\n    var _this = this;\n\n    if (!this.voiceEnabled && !this.textEnabled) {\n      this.setError(Translations.CHAT_DISABLED_ERROR, ChatErrorType.Unrecoverable);\n      return;\n    } else if (!this.botName) {\n      this.setError(Translations.NO_BOT_NAME_ERROR, ChatErrorType.Unrecoverable);\n      return;\n    }\n\n    if (this.welcomeMessage) this.appendToChat(this.welcomeMessage, MessageFrom.Bot); // Initialize AudioRecorder if voice is enabled\n\n    if (this.voiceEnabled) {\n      this.audioRecorder = new AudioRecorder({\n        time: this.silenceTime,\n        amplitude: this.silenceThreshold\n      });\n      this.audioRecorder.init().catch(function (err) {\n        _this.setError(err, ChatErrorType.Recoverable);\n      });\n    } // Callback function to be called after chat is completed\n\n\n    var onComplete = function onComplete(err, data) {\n      _this.chatCompleted.emit({\n        data: data,\n        err: err\n      });\n\n      if (_this.clearOnComplete) {\n        _this.reset();\n      } else {\n        _this.chatState = ChatState.Initial;\n      }\n    };\n\n    try {\n      Interactions.onComplete(this.botName, onComplete);\n    } catch (err) {\n      this.setError(err, ChatErrorType.Unrecoverable);\n    }\n  };\n  /**\n   * Handlers\n   */\n\n\n  class_1.prototype.handleMicButton = function () {\n    var _this = this;\n\n    if (this.chatState !== ChatState.Initial) return;\n    this.audioRecorder.stop();\n    this.chatState = ChatState.Listening;\n    this.audioRecorder.startRecording(function () {\n      return _this.handleSilence();\n    }, function (data, length) {\n      return _this.visualizer(data, length);\n    });\n  };\n\n  class_1.prototype.handleSilence = function () {\n    var _this = this;\n\n    this.chatState = ChatState.SendingVoice;\n    this.audioRecorder.stopRecording();\n    this.audioRecorder.exportWAV().then(function (blob) {\n      _this.sendVoiceMessage(blob);\n    });\n  };\n\n  class_1.prototype.handleTextChange = function (event) {\n    var target = event.target;\n    this.text = target.value;\n  };\n\n  class_1.prototype.handleCancelButton = function () {\n    this.audioRecorder.clear();\n    this.chatState = ChatState.Initial;\n  };\n\n  class_1.prototype.handleToastClose = function (errorType) {\n    this.error = undefined; // clear error\n    // if error is recoverable, reset the app state to initial\n\n    if (errorType === ChatErrorType.Recoverable) {\n      this.chatState = ChatState.Initial;\n    }\n  };\n  /**\n   * Visualization\n   */\n\n\n  class_1.prototype.visualizer = function (dataArray, bufferLength) {\n    var canvas = this.element.shadowRoot.querySelector('canvas');\n    visualize(dataArray, bufferLength, canvas);\n  };\n  /**\n   * Interactions helpers\n   */\n\n\n  class_1.prototype.sendTextMessage = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var text, response, err_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.text.length === 0 || this.chatState !== ChatState.Initial) return [2\n            /*return*/\n            ];\n            text = this.text;\n            this.text = '';\n            this.appendToChat(text, MessageFrom.User);\n            this.chatState = ChatState.SendingText;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Interactions.send(this.botName, text)];\n\n          case 2:\n            response = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_3 = _a.sent();\n            this.setError(err_3, ChatErrorType.Recoverable);\n            return [2\n            /*return*/\n            ];\n\n          case 4:\n            if (response.message) {\n              this.appendToChat(response.message, MessageFrom.Bot);\n            }\n\n            this.chatState = ChatState.Initial;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.sendVoiceMessage = function (audioInput) {\n    return __awaiter(this, void 0, void 0, function () {\n      var interactionsMessage, response, err_4, dialogState;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            interactionsMessage = {\n              content: audioInput,\n              options: {\n                messageType: 'voice'\n              }\n            };\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Interactions.send(this.botName, interactionsMessage)];\n\n          case 2:\n            response = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_4 = _a.sent();\n            this.setError(err_4, ChatErrorType.Recoverable);\n            return [2\n            /*return*/\n            ];\n\n          case 4:\n            this.chatState = ChatState.Initial;\n            dialogState = response.dialogState;\n            if (response.inputTranscript) this.appendToChat(response.inputTranscript, MessageFrom.User);\n            this.appendToChat(response.message, MessageFrom.Bot);\n            return [4\n            /*yield*/\n            , this.audioRecorder.play(response.audioStream).then(function () {\n              // if conversationMode is on, chat is incomplete, and mic button isn't pressed yet, resume listening.\n              if (_this.conversationModeOn && dialogState !== 'Fulfilled' && dialogState !== 'Failed' && _this.chatState === ChatState.Initial) {\n                _this.handleMicButton();\n              }\n            }).catch(function (err) {\n              return _this.setError(err, ChatErrorType.Recoverable);\n            })];\n\n          case 5:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.appendToChat = function (content, from) {\n    this.messages = __spreadArrays(this.messages, [{\n      content: content,\n      from: from\n    }]);\n  };\n  /**\n   * State control methods\n   */\n\n\n  class_1.prototype.setError = function (error, errorType) {\n    var message = typeof error === 'string' ? error : error.message;\n    this.chatState = ChatState.Error;\n    this.error = {\n      message: message,\n      errorType: errorType\n    };\n  };\n\n  class_1.prototype.reset = function () {\n    this.chatState = ChatState.Initial;\n    this.text = '';\n    this.error = undefined;\n    this.messages = [];\n    if (this.welcomeMessage) this.appendToChat(this.welcomeMessage, MessageFrom.Bot);\n    this.audioRecorder && this.audioRecorder.clear();\n  };\n\n  class_1.prototype.listeningFooterJSX = function () {\n    var _this = this;\n\n    var visualization = h(\"canvas\", {\n      height: \"50\"\n    });\n    var cancelButton = h(\"amplify-button\", {\n      \"data-test\": \"chatbot-cancel-button\",\n      handleButtonClick: function handleButtonClick() {\n        return _this.handleCancelButton();\n      },\n      class: \"icon-button\",\n      variant: \"icon\",\n      icon: \"ban\"\n    });\n    return [visualization, cancelButton];\n  };\n\n  class_1.prototype.footerJSX = function () {\n    var _this = this;\n\n    if (this.chatState === ChatState.Listening) return this.listeningFooterJSX();\n    var inputPlaceholder = this.textEnabled ? Translations.TEXT_INPUT_PLACEHOLDER : Translations.VOICE_INPUT_PLACEHOLDER;\n    var textInput = h(\"amplify-input\", {\n      placeholder: I18n.get(inputPlaceholder),\n      description: \"text\",\n      handleInputChange: function handleInputChange(evt) {\n        return _this.handleTextChange(evt);\n      },\n      value: this.text,\n      disabled: this.chatState === ChatState.Error || !this.textEnabled\n    });\n    var micButton = this.voiceEnabled && h(\"amplify-button\", {\n      \"data-test\": \"chatbot-mic-button\",\n      handleButtonClick: function handleButtonClick() {\n        return _this.handleMicButton();\n      },\n      class: \"icon-button\",\n      variant: \"icon\",\n      icon: \"microphone\",\n      disabled: this.chatState === ChatState.Error || this.chatState !== ChatState.Initial\n    });\n    var sendButton = this.textEnabled && h(\"amplify-button\", {\n      \"data-test\": \"chatbot-send-button\",\n      class: \"icon-button\",\n      variant: \"icon\",\n      icon: \"send\",\n      handleButtonClick: function handleButtonClick() {\n        return _this.sendTextMessage();\n      },\n      disabled: this.chatState === ChatState.Error || this.chatState !== ChatState.Initial\n    });\n    return [textInput, micButton, sendButton];\n  };\n\n  class_1.prototype.errorToast = function () {\n    var _this = this;\n\n    if (!this.error) return;\n    var _a = this.error,\n        message = _a.message,\n        errorType = _a.errorType;\n    return h(\"amplify-toast\", {\n      message: I18n.get(message),\n      handleClose: function handleClose() {\n        return _this.handleToastClose(errorType);\n      }\n    });\n  };\n\n  class_1.prototype.render = function () {\n    return h(Host, null, h(\"div\", {\n      class: \"amplify-chatbot\"\n    }, h(\"slot\", {\n      name: \"header\"\n    }, h(\"div\", {\n      class: \"header\",\n      \"data-test\": \"chatbot-header\"\n    }, I18n.get(this.botTitle))), h(\"div\", {\n      class: \"body\",\n      \"data-test\": \"chatbot-body\"\n    }, this.messageJSX(this.messages)), h(\"div\", {\n      class: \"footer\",\n      \"data-test\": \"chatbot-footer\"\n    }, this.footerJSX()), this.errorToast()));\n  };\n\n  Object.defineProperty(class_1.prototype, \"element\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return class_1;\n}();\n\nAmplifyChatbot.style = amplifyChatbotCss;\nexport { AmplifyChatbot as amplify_chatbot };"],"sourceRoot":""}