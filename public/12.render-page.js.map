{"version":3,"sources":["webpack://lib/./node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-federated-sign-in.entry.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACb;AACQ;AACjB;AAC2B;AACpE,iBAAiB,+DAAa;AAC9B;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA,yBAAyB,yDAAS;AAClC;AACA;AACA;AACA;AACA,aAAa,sDAAI,WAAW,sDAAI;AAChC,4BAA4B,wDAAoB;AAChD;AACA,iBAAiB,sDAAI,8CAA8C;AACnE;AACA;AACA,wEAAwE;AACxE;AACA;AACA,wEAAwE;AACxE;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA,qCAAqC,wDAAwD;AAC7F;AACA;AACA,2BAA2B,yDAAS;AACpC;AACA;AACA;AACA,gBAAgB,4DAAC,0BAA0B,2CAA2C,EAAE,4DAAC,qBAAqB,gDAAgD,EAAE,4DAAC,+BAA+B,iGAAiG;AACjS;AACA;AACA,CAAC;AAC8D","file":"12.render-page.js","sourcesContent":["import { r as registerInstance, h } from './index-39969785.js';\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { N as NO_AUTH_MODULE_FOUND } from './constants-d1abe7de.js';\nvar logger = new ConsoleLogger('amplify-federated-sign-in');\nvar AmplifyFederatedSignIn = /** @class */ (function () {\n    function AmplifyFederatedSignIn(hostRef) {\n        registerInstance(this, hostRef);\n        /** The current authentication state. */\n        this.authState = AuthState.SignIn;\n        /** Federated credentials & configuration. */\n        this.federated = {};\n    }\n    AmplifyFederatedSignIn.prototype.componentWillLoad = function () {\n        if (!Auth || typeof Auth.configure !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        var _a = Auth.configure().oauth, oauth = _a === void 0 ? {} : _a;\n        // backward compatibility\n        if (oauth['domain']) {\n            this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth);\n        }\n        else if (oauth['awsCognito']) {\n            this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth['awsCognito']);\n        }\n        if (oauth['auth0']) {\n            this.federated.auth0 = Object.assign(Object.assign({}, this.federated.auth0), oauth['auth0']);\n        }\n    };\n    AmplifyFederatedSignIn.prototype.render = function () {\n        if (!this.federated) {\n            logger.debug('federated prop is empty. show nothing');\n            logger.debug('federated={google_client_id: , facebook_app_id: , amazon_client_id}');\n            return null;\n        }\n        if (!Object.values(AuthState).includes(this.authState)) {\n            return null;\n        }\n        logger.debug('federated Config is', this.federated);\n        return (h(\"amplify-form-section\", { \"data-test\": \"federated-sign-in-section\" }, h(\"amplify-section\", { \"data-test\": \"federated-sign-in-body-section\" }, h(\"amplify-federated-buttons\", { authState: this.authState, \"data-test\": \"federated-sign-in-buttons\", federated: this.federated }))));\n    };\n    return AmplifyFederatedSignIn;\n}());\nexport { AmplifyFederatedSignIn as amplify_federated_sign_in };\n"],"sourceRoot":""}